apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: card-db-pvc
  namespace: dt-bank
spec:
  accessModes: [ "ReadWriteOnce" ] # This volume can be mounted by a single node
  resources:
    requests:
      storage: 1Gi # Adjust size as needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: card-service-database
  namespace: dt-bank
spec:
  replicas: 1
  selector:
    matchLabels:
      app: card-service-database
  template:
    metadata:
      labels:
        app: card-service-database
    spec:
      containers:
        - name: postgres
          image: postgres:17-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "test"
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: db-credentials, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: db-credentials, key: POSTGRES_PASSWORD } }
          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/postgresql/data
          readinessProbe: # K8s equivalent of healthcheck
            exec:
              command: [ "pg_isready", "-U", "test", "-d", "test" ]
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: card-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: card-service-database
  namespace: dt-bank
spec:
  selector:
    app: card-service-database
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
