# This file defines how to fetch secrets from Google Secret Manager.
# It assumes a ClusterSecretStore named 'gcp-secret-store' is configured to
# point to your GCP project.
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-credentials
  namespace: dt-bank
spec:
  secretStoreRef:
    name: gcp-secret-store
    kind: ClusterSecretStore
  target:
    name: db-credentials # Creates a K8s secret with this name
    creationPolicy: Owner
  data:
    - secretKey: POSTGRES_USER
      remoteRef:
        key: dt-bank-db-user # The name of the secret in GCP Secret Manager
    - secretKey: POSTGRES_PASSWORD
      remoteRef:
        key: dt-bank-db-password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: rabbitmq-credentials
  namespace: dt-bank
spec:
  secretStoreRef:
    name: gcp-secret-store
    kind: ClusterSecretStore
  target:
    name: rabbitmq-credentials
    creationPolicy: Owner
  data:
    - secretKey: RABBITMQ_DEFAULT_USER
      remoteRef:
        key: dt-bank-rabbitmq-user
    - secretKey: RABBITMQ_DEFAULT_PASS
      remoteRef:
        key: dt-bank-rabbitmq-pass
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-credentials
  namespace: dt-bank
spec:
  secretStoreRef:
    name: gcp-secret-store
    kind: ClusterSecretStore
  target:
    name: keycloak-credentials
  data:
    - secretKey: ADMIN_USERNAME
      remoteRef:
        key: dt-bank-keycloak-admin-user
    - secretKey: ADMIN_PASSWORD
      remoteRef:
        key: dt-bank-keycloak-admin-password
    - secretKey: DB_USERNAME
      remoteRef:
        key: dt-bank-keycloak-db-user
    - secretKey: DB_PASSWORD
      remoteRef:
        key: dt-bank-keycloak-db-password