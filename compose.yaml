services:
  keycloak:
    depends_on: &fb-depends-on
      fluent-bit:
        condition: service_started
    logging: &fb-logging
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    image: quay.io/keycloak/keycloak:24.0.4
    ports:
      - "8180:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./gateway/src/test/resources/realm.json:/opt/keycloak/data/import/realm.json:ro
    command: start-dev --import-realm

  rabbitmq:
    depends_on: *fb-depends-on
    logging: *fb-logging
    image: "rabbitmq:4.1-alpine"
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
    ports:
      - "5672:5672"
    volumes:
      - mq_data:/var/lib/rabbitmq

  zipkin:
    image: "openzipkin/zipkin:3.5"
    ports:
      - "9411:9411"

  redis:
    depends_on: *fb-depends-on
    logging: *fb-logging
    image: redis:8.0-alpine
    ports:
      - "6379:6379"

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:3.5
    ports:
      - "24224:24224"
    environment:
      LOKI_URL: http://loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

  loki:
    image: grafana/loki:3.5
    depends_on: *fb-depends-on
    healthcheck:
      test: wget --quiet --tries=1 --output-document=- http://localhost:3100/ready | grep -q -w ready || exit 1
      interval: 5s
      timeout: 1s
      retries: 10
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki/local-config.yaml:/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:12.0.1
    environment:
      #GF_AUTH_DISABLE_LOGIN_FORM: true
      #GF_AUTH_ANONYMOUS_ENABLED: true
      #GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_SECURITY_ADMIN_USER: user
      GF_SECURITY_ADMIN_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 10
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./observability/grafana/provisioning/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./observability/grafana/dashboards:/etc/grafana/dashboards
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v3.4.1
    restart: on-failure
    # https://prometheus.io/docs/prometheus/latest/storage/#remote-storage-integrations
    command:
      # See feature flags: https://prometheus.io/docs/prometheus/latest/feature_flags/
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9090/-/healthy || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 10
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  tempo:
    image: grafana/tempo:2.8.0-rc.1
    command: [ "-config.file=/etc/tempo.yml" ]
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3200/api/echo || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 10
    ports:
      - "3200:3200"   # tempo
      - "4318:4318"   # otlp http
      - "4317:4317"   # otlp grpc
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo.yml:ro

volumes:
  mq_data: